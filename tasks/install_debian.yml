---
# file: tasks/install_debian.yml

- include: install_common.yml
  become: yes

- name: install - add beats repository gpg key
  apt_key:
    url: "{{beats_repository_gpg_key_url}}"
  become: yes

- name: install - add beats repository
  apt_repository:
    repo: "{{beats_repository_url}}"
    state: present
    update_cache: yes
  become: yes

- name: install - install beats package from repository
  with_items: "{{beats_package|default([])}}"
  apt:
    name: "{{item.name}}=''{{item.version|default('')}}"
    state: "{{item.state|default('present')}}"
  become: yes
  register: beats_handler_notify
  notify:
    - log open files
    - restart service

- name: install - get beats installed version
  with_items: "{{beats|default([])}}"
  command: "dpkg-query --showformat='${Version}' --show {{item}}"
  register: beats_version_command

- name: install - register beats_version
  with_items: "{{beats_version_command.results|default([])}}"
  set_fact:
    beats_version: "{{beats_version |default({}) |combine( {item.item: item.stdout} ) }}"

- name: install - debug beats installed version
  with_items: "{{beats|default([])}}"
  debug: msg="{{beats_version[item]}}"
  when: beats_debug|default(false)
  tags: debug

- name: install - install selected version of beats package
  with_items: "{{beats_download|default([])}}"
  apt:
    deb: "{{beats_download_url}}/{{item.name}}/{{item.name}}-{{item.version}}-{{ansible_machine}}.deb"
    state: "{{item.state|default('present')}}"
  register: beats_handler_notify
  notify:
    - log open files
    - restart service
  when: beats_version[item.name] != item.version
  become: yes

