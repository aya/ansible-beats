---
# file: tasks/install_redhat.yml

- include: install_version.yml
# - name: install - get beats installed version
#   with_items: "{{beats|default([])}}"
#   command: "rpm -q {{item}} --queryformat=\"%{VERSION}\""
#   register: beats_version_command

- name: install - add beats repository gpg key
  rpm_key:
    key: "{{beats_repository_gpg_key_url}}"
    validate_certs: "no"
  become: yes

- name: install - add beats repository
  yumrepo:
    name: beats
    baseurl: "{{beats_repository_url}}"
    enabled: yes
    gpgcheck: yes
    gpgkey: "{{beats_repository_gpg_key_url}}"
  become: yes

- name: install - install beats package from repository
  with_items: "{{beats_package|default([])}}"
  when: item.name is defined
  yum:
    name: "{{item.name}}"
    state: "{{item.state|default('present')}}"
  register: beats_handler_notify
  notify:
    - log open files
    - restart service
  become: yes

- name: install - get beats installed version
  with_items: "{{beats|default([])}}"
  command: "echo $({{item}} -version 2>/dev/null || /usr/share/{{item}}/bin/{{item}} -version 2>/dev/null) |awk '{print $3}'"
  register: beats_version_command

- name: install - register beats_version
  with_items: "{{beats_version_command.results|default([])}}"
  set_fact:
    beats_version: "{{beats_version |default({}) |combine( {item.item: item.stdout} ) }}"

- name: install - debug beats installed version
  with_items: "{{beats|default([])}}"
  debug: msg="{{beats_version[item]}}"
  when: beats_debug|default(false)
  tags: debug

- name: install - install beats package from specific url
  with_items: "{{beats_download|default([])}}"
  yum:
    name: "{{beats_download_url}}/{{item.name}}/{{item.name}}-{{item.version}}-{{ansible_machine}}.rpm"
    state: "{{item.state|default('present')}}"
  register: beats_handler_notify
  notify:
    - log open files
    - restart service
  when: beats_version[item.name] != item.version
  become: yes

- include: install_common.yml
  become: yes

