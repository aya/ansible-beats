#!/bin/bash
# Author : Yann Autissier <yann.autissier@gmail.com>

# WARNING: SOURCE_PREFIX will be rm -rf'ed at the beginning of the script
SOURCE_PREFIX="/tmp/filebeat/tests"
LOG_FILE="/tmp/filebeat/$(basename $0).$(date '+%Y%m%d-%H%M%S').log"

SLEEP_BETWEEN_LINES="0.01"
SLEEP_BETWEEN_FILES="1"

# lock to prevent multi instances running simultaneously
LOCK_FILE="/tmp/.lock-${0##*/}"
set -o noclobber
(echo "$$" > $LOCK_FILE) 2>/dev/null && trap "rm ${LOCK_FILE}; exit" HUP INT TERM || exit 255
set +o noclobber

# Usage
usage() {
    echo "Usage: $0 [-n|-v|-d]"
    echo -e "\t-t\ttest mode (do nothing)"
    echo -e "\t-v\tverbose mode"
    echo -e "\t-d\tdebug mode"
    rm "${LOCK_FILE}" && trap - HUP INT TERM && exit 1
}

for arg in $@; do
    [ ${arg:0:1} = "-" ] || continue
    [ "${arg}" != ${arg/n/} ] && TEST=1
    [ "${arg}" != ${arg/v/} ] && VERBOSE=1
    [ "${arg}" != ${arg/d/} ] && DEBUG=1
    [ "${arg}" != ${arg/h/} ] && HELP=1
done

[ ${HELP} ] && usage

if [ ! -r config ]; then
    [ ${VERBOSE} ] && echo "ERROR - Cannot find file: config"
    usage
fi

[ ${VERBOSE} ] || exec >> $LOG_FILE

SOURCE_PREFIX="${SOURCE_PREFIX:-/tmp/filebeat/tests}"
if [ -d ${SOURCE_PREFIX} ]; then
    echo "Removing dir: ${SOURCE_PREFIX}"
    [ ${TEST} ] || rm -rf ${SOURCE_PREFIX}
fi

while IFS=":" read type lines files rotate file; do
    # escape line beginning with #
    [ -z ${type%%#*} ] && continue
    # create temporary directory where to create the log files
    log_dir="${SOURCE_PREFIX}$(dirname $file)"
    echo "Creating dir ($type): ${log_dir}"
    [ ${TEST} ] || mkdir -p "${log_dir}"
    # $files max is 999
    [ ${files} -gt 999 ] && files=999
    # $lines max is 999999
    [ ${lines} -gt 999999 ] && lines=999999
    # log file should contain the "{ID}" string to replace with the log $id sequence
    [ -n "${file}" ] && [ "${file/\{ID\}/}" != "${file}" ] || continue
    # we need a $type file with sample log lines inside
    [ -r "$type" ] || continue
    # create $files log files
    for id in $(seq 1 ${files}); do
        # remove old log files
        if [ ${id} -gt ${rotate} ]; then
            log_file="${SOURCE_PREFIX}${file/\{ID\}/$(printf '%03d' $((${id}-${rotate})))}"
            echo "Removing file (${type}.$(printf '%03d' $((${id}-${rotate})))): ${log_file}"
            [ ${TEST} ] || rm -f ${log_file} 2>/dev/null
        fi
        # $log is $id padded with 0
        printf -v log "%03d" $id
        log_file="${SOURCE_PREFIX}${file/\{ID\}/${log}}"
        echo "Creating file (${type}.${log}): ${log_file}"
        # fill the log with $lines messages
        line=0
        while [ ${line} -lt ${lines} ]; do
            line=$((${line}+1))
            # take a random line from $type file, prefix it with usefull informations and add it to $log_file
            [ ${TEST} ] || echo -e "line: $line, message: $(shuf -n 1 $type)" >> ${log_file}
            [ ${DEBUG} ] && echo -e "Adding to file ${log_file} line $line"
            # sleep
            [ -n "${SLEEP_BETWEEN_LINES}" ] && sleep $SLEEP_BETWEEN_LINES
        done
        # sleep
        [ -n "${SLEEP_BETWEEN_FILES}" ] && sleep $SLEEP_BETWEEN_FILES
    done &
done < config

wait && rm -f "${LOCK_FILE}" 2>/dev/null && trap - HUP INT TERM && exit 0
